openapi: 3.0.2
info:
  title: Pet-park MiniApp - OpenAPI 3.0.2
  description: |-
    This is a pet-park MiniApp that enables pet Owners to view nearby parks supportive of their precious pets, rate them, and engage about it.

  termsOfService: http://swagger.io/terms/
  contact:
    email: timor.gruber@s.afeka.ac.il
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.1.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://parkstore3.swagger.io/api/v1
tags:
  - name: park
    description: Everything about local parks
  - name: review
    description: Reviews

paths:
  /parks:
    get:
      tags:
        - park
      summary: Get all known parks
      description: Returns a collection of parks
      operationId: getParks
      parameters:
        - in: query
          name: longitude
          description: Local longitude
          schema:
            $ref: "./schemas/location.yml#/Longitude"
        - in: query
          name: latitude
          description: Local latitude
          schema:
            $ref: "./schemas/location.yml#/Latitude"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./schemas/park.yml#/Park"
        "400":
          description: Bad Request - Invalid parameters

  /parks/{park}:
    get:
      tags:
        - park
      summary: Find park by ID
      description: Returns a single park
      operationId: getParkById
      parameters:
        - $ref: "#/components/parameters/Park"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "./schemas/park.yml#/Park"
        "400":
          description: Invalid ID supplied
        "404":
          description: Park not found

  /parks/{park}/images:
    get:
      tags:
        - park
      summary: Get all images of a given park
      description: Returns collection of image URLs
      parameters:
        - $ref: "#/components/parameters/Park"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "400":
          description: Invalid ID supplied
        "404":
          description: Park not found
    post:
      tags:
        - park
      summary: Upload an image of the given park
      description: ""
      operationId: addParkImage
      parameters:
        - $ref: "#/components/parameters/Park"
        - name: additionalMetadata
          in: query
          description: Additional Metadata
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        "200":
          description: Successful operation
      security:
        - jwt: []

  /parks/{park}/reviews:
    get:
      tags:
        - park
        - review
      summary: Get all reviews for the given park
      description: Returns a collection of reviews
      operationId: getParkReviews
      parameters:
        - $ref: "#/components/parameters/Park"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./schemas/review.yml"
        "400":
          description: Invalid ID supplied
        "404":
          description: Park Not Found
    post:
      tags:
        - park
        - review
      summary: Post a review for this park
      description: ""
      operationId: postParkReview
      parameters:
        - $ref: "#/components/parameters/Park"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "./schemas/review.yml"
      responses:
        "200":
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Park Not Found
      security:
        - jwt: []

  /parks/{park}/reviews/{review}:
    get:
      tags:
        - park
        - review
      summary: Get the given review for the given park
      description: ""
      operationId: getSpecificParkReview
      parameters:
        - $ref: "#/components/parameters/Park"
        - $ref: "./parameters/review.yml"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./schemas/review.yml"
        "400":
          description: Invalid ID supplied
        "404":
          description: Park or Review Not Found

components:
  parameters:
    Park:
      in: path
      name: park
      description: ID of park to update
      required: true
      schema:
        type: integer
        format: int64

  securitySchemes:
    jwt:
      $ref: "./schemas/security/jwt.yml"
